lines(abline(h = 28, col = "black", lty = 4))
legend("bottomright", inset=c(.03, .03), c("Group 1","Group 2"), lty = 1, fill = T, cex = 0.85, title="Cohort")
# Let's first visually compare the two groups by putting the monthly avg time series' on the same plot
plot(matrixG1_ts_temp, col = "black", ylim = c(20,31),
xlab = "Time", ylab = "Avg. Water Temperature (C)")
lines(matrixG2_ts_temp, col = "gray")
lines(abline(h = 26, col = "black", lty = 4))
lines(abline(h = 28, col = "black", lty = 4))
legend("bottomright", inset=c(.03, .03), c("Group 1","Group 2"), lty = 1, col = T, cex = 0.85, title="Cohort")
# Let's first visually compare the two groups by putting the monthly avg time series' on the same plot
plot(matrixG1_ts_temp, col = "black", ylim = c(20,31),
xlab = "Time", ylab = "Avg. Water Temperature (C)")
lines(matrixG2_ts_temp, col = "gray")
lines(abline(h = 26, col = "black", lty = 4))
lines(abline(h = 28, col = "black", lty = 4))
legend("bottomright", inset=c(.03, .03), c("Group 1","Group 2"), lty = 1, col = 0.5:1, cex = 0.85, title="Cohort")
# Let's first visually compare the two groups by putting the monthly avg time series' on the same plot
plot(matrixG1_ts_temp, col = "black", ylim = c(20,31),
xlab = "Time", ylab = "Avg. Water Temperature (C)")
lines(matrixG2_ts_temp, col = "gray")
lines(abline(h = 26, col = "black", lty = 4))
lines(abline(h = 28, col = "black", lty = 4))
legend("bottomright", inset=c(.03, .03), c("Group 1","Group 2"), lty = 1, col = 0.5:1, cex = 0.85, title="Cohort")
# Let's first visually compare the two groups by putting the monthly avg time series' on the same plot
plot(matrixG1_ts_temp, col = "black", ylim = c(20,31),
xlab = "Time", ylab = "Avg. Water Temperature (C)")
lines(matrixG2_ts_temp, col = "gray")
lines(abline(h = 26, col = "black", lty = 4))
lines(abline(h = 28, col = "black", lty = 4))
legend("bottomright", inset=c(.03, .03), c("Group 1","Group 2"), lty = 1, col = 1:2, cex = 0.85, title="Cohort")
legend("bottomright", inset=c(.03, .03), c("Group 1","Group 2"), lty = 1, col = 1:5, cex = 0.85, title="Cohort")
# Let's first visually compare the two groups by putting the monthly avg time series' on the same plot
plot(matrixG1_ts_temp, col = "black", ylim = c(20,31),
xlab = "Time", ylab = "Avg. Water Temperature (C)")
lines(matrixG2_ts_temp, col = "gray")
lines(abline(h = 26, col = "black", lty = 4))
lines(abline(h = 28, col = "black", lty = 4))
legend("bottomright", inset=c(.03, .03), c("Group 1","Group 2"), lty = 1, col = 1:5, cex = 0.85, title="Cohort")
# Let's first visually compare the two groups by putting the monthly avg time series' on the same plot
plot(matrixG1_ts_temp, col = "black", ylim = c(20,31),
xlab = "Time", ylab = "Avg. Water Temperature (C)")
lines(matrixG2_ts_temp, col = "gray")
lines(abline(h = 26, col = "black", lty = 4))
lines(abline(h = 28, col = "black", lty = 4))
legend("bottomright", inset=c(.03, .03), c("Group 1","Group 2"), lty = 1, col = 1&5, cex = 0.85, title="Cohort")
# Let's first visually compare the two groups by putting the monthly avg time series' on the same plot
plot(matrixG1_ts_temp, col = "black", ylim = c(20,31),
xlab = "Time", ylab = "Avg. Water Temperature (C)")
lines(matrixG2_ts_temp, col = "gray")
lines(abline(h = 26, col = "black", lty = 4))
lines(abline(h = 28, col = "black", lty = 4))
legend("bottomright", inset=c(.03, .03), c("Group 1","Group 2"), lty = 1, col = 1 & 2, cex = 0.85, title="Cohort")
# Let's first visually compare the two groups by putting the monthly avg time series' on the same plot
plot(matrixG1_ts_temp, col = "black", ylim = c(20,31),
xlab = "Time", ylab = "Avg. Water Temperature (C)")
lines(matrixG2_ts_temp, col = "gray")
lines(abline(h = 26, col = "black", lty = 4))
lines(abline(h = 28, col = "black", lty = 4))
legend("bottomright", inset=c(.03, .03), c("Group 1","Group 2"), lty = 1, fill = T, cex = 0.85, title="Cohort")
# Let's first visually compare the two groups by putting the monthly avg time series' on the same plot
plot(matrixG1_ts_temp, col = "black", ylim = c(20,31),
xlab = "Time", ylab = "Avg. Water Temperature (C)")
lines(matrixG2_ts_temp, col = "gray")
lines(abline(h = 26, col = "black", lty = 4))
lines(abline(h = 28, col = "black", lty = 4))
legend("bottomright", inset=c(.03, .03), c("Group 1","Group 2"), lty = 1, col = T, cex = 0.85, title="Cohort")
# Let's first visually compare the two groups by putting the monthly avg time series' on the same plot
plot(matrixG1_ts_temp, col = "black", ylim = c(20,31),
xlab = "Time", ylab = "Avg. Water Temperature (C)")
lines(matrixG2_ts_temp, col = "gray")
lines(abline(h = 26, col = "black", lty = 4))
lines(abline(h = 28, col = "black", lty = 4))
legend("bottomright", inset=c(.03, .03), c("Group 1","Group 2"), lty = 1, col = 0, cex = 0.85, title="Cohort")
# Let's first visually compare the two groups by putting the monthly avg time series' on the same plot
plot(matrixG1_ts_temp, col = "black", ylim = c(20,31),
xlab = "Time", ylab = "Avg. Water Temperature (C)")
lines(matrixG2_ts_temp, col = "gray")
lines(abline(h = 26, col = "black", lty = 4))
lines(abline(h = 28, col = "black", lty = 4))
legend("bottomright", inset=c(.03, .03), c("Group 1","Group 2"), lty = 1, col = 1, cex = 0.85, title="Cohort")
# Let's first visually compare the two groups by putting the monthly avg time series' on the same plot
plot(matrixG1_ts_temp, col = "black", ylim = c(20,31),
xlab = "Time", ylab = "Avg. Water Temperature (C)")
lines(matrixG2_ts_temp, col = "gray")
lines(abline(h = 26, col = "black", lty = 4))
lines(abline(h = 28, col = "black", lty = 4))
legend("bottomright", inset=c(.03, .03), c("Group 1","Group 2"), lty = 1, col = gray(0), cex = 0.85, title="Cohort")
# Let's first visually compare the two groups by putting the monthly avg time series' on the same plot
plot(matrixG1_ts_temp, col = "black", ylim = c(20,31),
xlab = "Time", ylab = "Avg. Water Temperature (C)")
lines(matrixG2_ts_temp, col = "gray")
lines(abline(h = 26, col = "black", lty = 4))
lines(abline(h = 28, col = "black", lty = 4))
legend("bottomright", inset=c(.03, .03), c("Group 1","Group 2"), lty = 1, col = gray(0):gray(0.5), cex = 0.85, title="Cohort")
# Let's first visually compare the two groups by putting the monthly avg time series' on the same plot
plot(matrixG1_ts_temp, col = gray(0), ylim = c(20,31),
xlab = "Time", ylab = "Avg. Water Temperature (C)")
lines(matrixG2_ts_temp, col = "gray")
# Let's first visually compare the two groups by putting the monthly avg time series' on the same plot
plot(matrixG1_ts_temp, col = gray(0), ylim = c(20,31),
xlab = "Time", ylab = "Avg. Water Temperature (C)")
lines(matrixG2_ts_temp, col = gray(0.5))
# Let's first visually compare the two groups by putting the monthly avg time series' on the same plot
plot(matrixG1_ts_temp, col = gray(0), ylim = c(20,31),
xlab = "Time", ylab = "Avg. Water Temperature (C)")
lines(matrixG2_ts_temp, col = gray(0.75))
lines(abline(h = 26, col = "black", lty = 4))
lines(abline(h = 28, col = "black", lty = 4))
# Let's first visually compare the two groups by putting the monthly avg time series' on the same plot
plot(matrixG1_ts_temp, col = gray(0), ylim = c(20,31),
xlab = "Time", ylab = "Avg. Water Temperature (C)")
lines(matrixG2_ts_temp, col = gray(0.75))
lines(abline(h = 26, col = "black", lty = 4))
lines(abline(h = 28, col = "black", lty = 4))
legend("bottomright", inset=c(.03, .03), c("Group 1","Group 2"), lty = 1, col = T, cex = 0.85, title="Cohort")
legend("bottomright", inset=c(.03, .03), c("Group 1","Group 2"), lty = 1, col = c(gray(0):gray(0.75)), cex = 0.85, title="Cohort")
# Let's first visually compare the two groups by putting the monthly avg time series' on the same plot
plot(matrixG1_ts_temp, col = gray(0), ylim = c(20,31),
xlab = "Time", ylab = "Avg. Water Temperature (C)")
lines(matrixG2_ts_temp, col = gray(0.75))
lines(abline(h = 26, col = "black", lty = 4))
lines(abline(h = 28, col = "black", lty = 4))
legend("bottomright", inset=c(.03, .03), c("Group 1","Group 2"), lty = 1, col = c(gray(0):gray(0.75)), cex = 0.85, title="Cohort")
legend("bottomright", inset=c(.03, .03), c("Group 1","Group 2"), lty = 1, col = c("black","gray"), cex = 0.85, title="Cohort")
# Let's first visually compare the two groups by putting the monthly avg time series' on the same plot
plot(matrixG1_ts_temp, col = "black", ylim = c(20,31),
xlab = "Time", ylab = "Avg. Water Temperature (C)")
lines(matrixG2_ts_temp, col = "gray")
lines(abline(h = 26, col = "black", lty = 4))
lines(abline(h = 28, col = "black", lty = 4))
legend("bottomright", inset=c(.03, .03), c("Group 1","Group 2"), lty = 1, col = c("black","gray"), cex = 0.85, title="Cohort")
water_temp = matrix(nrow = 108, ncol = 2) # matrix for box plot
water_temp[1:54,1] = matrix_dataG1[,3] # copy over year from earlier matrix
water_temp[55:108,1] = matrix_dataG2[,3] # copy over year from earlier matrix
water_temp[1:54,2] = 1 # Group number
water_temp[55:108,2] = 2 # Group Number
water_temp_df = as.data.frame(water_temp)
favstats(V1 ~ V2, data = water_temp_df)
MWU_water = group_by(water_temp_df, V2) %>%
summarise(
count = n(),
mean = mean(V1, na.rm = TRUE),
sd = sd(V1, na.rm = TRUE),
median = median(V1, na.rm = TRUE),
IQR = IQR(V1, na.rm = TRUE)
)
print(MWU_water)
water_temp_df$V2 = as.factor(water_temp_df$V2) # Changing V2 to a factor so its counter as a categorical var (instead of integer)
box_water_temp = ggplot(data = water_temp_df, aes(x= V2, y= V1, group = V2, fill = V2), auto.key = T) +
geom_boxplot() + labs(x = "Group", y = "Water Temperature (C)") + labs(fill="Cohort") +
theme(plot.title = element_text(hjust = 0.5))
print(box_water_temp)
water_temp_df$V2 = as.factor(water_temp_df$V2) # Changing V2 to a factor so its counter as a categorical var (instead of integer)
box_water_temp = ggplot(data = water_temp_df, aes(x= V2, y= V1, group = V2, fill = V2), auto.key = T) +
geom_boxplot() + labs(x = "Group", y = "Water Temperature (C)") + labs(fill="Group") +
theme(plot.title = element_text(hjust = 0.5))
water_temp_df$V2 = as.factor(water_temp_df$V2) # Changing V2 to a factor so its counter as a categorical var (instead of integer)
box_water_temp = ggplot(data = water_temp_df, aes(x= V2, y= V1, group = V2, fill = V2), auto.key = T) +
geom_boxplot() + labs(x = "Group", y = "Water Temperature (C)") + labs(fill="Group") +
theme(plot.title = element_text(hjust = 0.5))
water_temp_df$V2 = as.factor(water_temp_df$V2) # Changing V2 to a factor so its counter as a categorical var (instead of integer)
box_water_temp = ggplot(data = water_temp_df, aes(x= V2, y= V1, group = V2, fill = V2), auto.key = T) +
geom_boxplot() + labs(x = "Group", y = "Water Temperature (C)") + labs(fill="Group") +
theme(plot.title = element_text(hjust = 0.5))
print(box_water_temp)
water_temp_df$V2 = as.factor(water_temp_df$V2) # Changing V2 to a factor so its counter as a categorical var (instead of integer)
box_water_temp = ggplot(data = water_temp_df, aes(x= V2, y= V1, group = V2, fill = V2), auto.key = T) +
geom_boxplot() + labs(x = "Group", y = "Water Temperature (C)") + labs(fill="Group") +
theme(plot.title = element_text(hjust = 0.5))
box_water_temp + scale_fill_grey()
print(box_water_temp)
water_temp_df$V2 = as.factor(water_temp_df$V2) # Changing V2 to a factor so its counter as a categorical var (instead of integer)
box_water_temp = ggplot(data = water_temp_df, aes(x= V2, y= V1, group = V2, fill = V2), auto.key = T) +
geom_boxplot() + labs(x = "Group", y = "Water Temperature (C)") + labs(fill="Group") +
theme(plot.title = element_text(hjust = 0.5))
box_water_temp + scale_fill_grey()
water_temp_df$V2 = as.factor(water_temp_df$V2) # Changing V2 to a factor so its counter as a categorical var (instead of integer)
box_water_temp = ggplot(data = water_temp_df, aes(x= V2, y= V1, group = V2, fill = V2), auto.key = T) +
geom_boxplot() + labs(x = "Group", y = "Water Temperature (C)") + labs(fill="Group") +
theme(plot.title = element_text(hjust = 0.5)) + scale_fill_grey()
print(box_water_temp)
water_temp_df$V2 = as.factor(water_temp_df$V2) # Changing V2 to a factor so its counter as a categorical var (instead of integer)
box_water_temp = ggplot(data = water_temp_df, aes(x= V2, y= V1, group = V2, fill = V2), auto.key = T) +
geom_boxplot() + labs(x = "Group", y = "Water Temperature (C)") + labs(fill="Group") +
theme(plot.title = element_text(hjust = 0.5)) + scale_fill_grey()
print(box_water_temp)
water_temp_df$V2 = as.factor(water_temp_df$V2) # Changing V2 to a factor so its counter as a categorical var (instead of integer)
box_water_temp = ggplot(data = water_temp_df, aes(x= V2, y= V1, group = V2, fill = V2), auto.key = T) +
geom_boxplot() + labs(x = "Group", y = "Water Temperature (C)") + labs(fill="Group") +
theme(plot.title = element_text(hjust = 0.5)) + scale_fill_grey()
print(box_water_temp)
water_temp_df$V2 = as.factor(water_temp_df$V2) # Changing V2 to a factor so its counter as a categorical var (instead of integer)
box_water_temp = ggplot(data = water_temp_df, aes(x= V2, y= V1, group = V2, fill = V2), auto.key = T) +
geom_boxplot() + labs(x = "Cohort", y = "Water Temperature (C)") + labs(fill="Group") +
theme(plot.title = element_text(hjust = 0.5)) + scale_fill_grey()
print(box_water_temp)
water_temp_df$V2 = as.factor(water_temp_df$V2) # Changing V2 to a factor so its counter as a categorical var (instead of integer)
box_water_temp = ggplot(data = water_temp_df, aes(x= V2, y= V1, group = V2, fill = V2), auto.key = T) +
geom_boxplot() + labs(x = "Group", y = "Water Temperature (C)") + labs(fill="Group") +
theme(plot.title = element_text(hjust = 0.5)) + scale_fill_grey()
print(box_water_temp)
water_temp_df$V2 = as.factor(water_temp_df$V2) # Changing V2 to a factor so its counter as a categorical var (instead of integer)
box_water_temp = ggplot(data = water_temp_df, aes(x= V2, y= V1, group = V2), auto.key = T) +
geom_boxplot() + labs(x = "Group", y = "Water Temperature (C)") + labs(fill="Group") +
theme(plot.title = element_text(hjust = 0.5)) + scale_fill_grey()
print(box_water_temp)
water_temp_df$V2 = as.factor(water_temp_df$V2) # Changing V2 to a factor so its counter as a categorical var (instead of integer)
box_water_temp = ggplot(data = water_temp_df, aes(x= V2, y= V1, group = V2), auto.key = T) +
geom_boxplot() + labs(x = "Group", y = "Water Temperature (C)") + labs(fill="Group") +
theme(plot.title = element_text(hjust = 0.5)) + scale_fill_grey()
print(box_water_temp)
water_temp_df$V2 = as.factor(water_temp_df$V2) # Changing V2 to a factor so its counter as a categorical var (instead of integer)
box_water_temp = ggplot(data = water_temp_df, aes(x= V2, y= V1, group = V2), auto.key = T) +
geom_boxplot() + labs(x = "Group", y = "Water Temperature (C)") + labs(fill="Group") +
theme(plot.title = element_text(hjust = 0.5)) + scale_fill_grey()
print(box_water_temp)
box_water_temp = ggplot(data = water_temp_df, aes(x= V2, y= V1, group = V2), auto.key = T) +
geom_boxplot(fill = gray(0.25), color = "black") + labs(x = "Group", y = "Water Temperature (C)") + labs(fill="Group") +
theme(plot.title = element_text(hjust = 0.5)) + scale_fill_grey()
water_temp_df$V2 = as.factor(water_temp_df$V2) # Changing V2 to a factor so its counter as a categorical var (instead of integer)
box_water_temp = ggplot(data = water_temp_df, aes(x= V2, y= V1, group = V2), auto.key = T) +
geom_boxplot(fill = gray(0.25), color = "black") + labs(x = "Group", y = "Water Temperature (C)") + labs(fill="Group") +
theme(plot.title = element_text(hjust = 0.5)) + scale_fill_grey()
print(box_water_temp)
box_water_temp = ggplot(data = water_temp_df, aes(x= V2, y= V1, group = V2), auto.key = T) +
geom_boxplot(fill = gray(0.75), color = "black") + labs(x = "Group", y = "Water Temperature (C)") + labs(fill="Group") +
theme(plot.title = element_text(hjust = 0.5)) + scale_fill_grey()
print(box_water_temp)
box_water_temp = ggplot(data = water_temp_df, aes(x= V2, y= V1, group = V2), auto.key = T) +
geom_boxplot(fill = scale_fill_grey(), color = "black") + labs(x = "Group", y = "Water Temperature (C)") + labs(fill="Group") +
theme(plot.title = element_text(hjust = 0.5)) + scale_fill_grey()
print(box_water_temp)
water_temp_df$V2 = as.factor(water_temp_df$V2) # Changing V2 to a factor so its counter as a categorical var (instead of integer)
box_water_temp = ggplot(data = water_temp_df, aes(x= V2, y= V1, group = V2), auto.key = T) +
geom_boxplot(fill = scale_fill_grey(), color = "black") + labs(x = "Group", y = "Water Temperature (C)") + labs(fill="Group") +
theme(plot.title = element_text(hjust = 0.5)) + scale_fill_grey()
print(box_water_temp)
box_water_temp = ggplot(data = water_temp_df, aes(x= V2, y= V1, group = V2), auto.key = T) +
geom_boxplot(scale_fill_grey(), color = "black") + labs(x = "Group", y = "Water Temperature (C)") + labs(fill="Group") +
theme(plot.title = element_text(hjust = 0.5)) + scale_fill_grey()
water_temp_df$V2 = as.factor(water_temp_df$V2) # Changing V2 to a factor so its counter as a categorical var (instead of integer)
box_water_temp = ggplot(data = water_temp_df, aes(x= V2, y= V1, group = V2), auto.key = T) +
geom_boxplot(scale_fill_grey(), color = "black") + labs(x = "Group", y = "Water Temperature (C)") + labs(fill="Group") +
theme(plot.title = element_text(hjust = 0.5)) + scale_fill_grey()
print(box_water_temp)
water_temp_df$V2 = as.factor(water_temp_df$V2) # Changing V2 to a factor so its counter as a categorical var (instead of integer)
box_water_temp = ggplot(data = water_temp_df, aes(x= V2, y= V1, group = V2), auto.key = T) +
geom_boxplot() + labs(x = "Group", y = "Water Temperature (C)") + labs(fill="Group") +
theme(plot.title = element_text(hjust = 0.5)) + scale_fill_grey()
print(box_water_temp)
box_water_temp = ggplot(data = water_temp_df, aes(x= V2, y= V1, group = V2, fill = V1), auto.key = T) +
geom_boxplot() + labs(x = "Group", y = "Water Temperature (C)") + labs(fill="Group") +
theme(plot.title = element_text(hjust = 0.5)) + scale_fill_grey()
print(box_water_temp)
water_temp_df$V2 = as.factor(water_temp_df$V2) # Changing V2 to a factor so its counter as a categorical var (instead of integer)
box_water_temp = ggplot(data = water_temp_df, aes(x= V2, y= V1, group = V2, fill = V1), auto.key = T) +
geom_boxplot() + labs(x = "Group", y = "Water Temperature (C)") + labs(fill="Group") +
theme(plot.title = element_text(hjust = 0.5)) + scale_fill_grey()
print(box_water_temp)
box_water_temp = ggplot(data = water_temp_df, aes(x= V2, y= V1, group = V2), auto.key = T) +
geom_boxplot() + labs(x = "Group", y = "Water Temperature (C)") + labs(fill="Group") +
theme(plot.title = element_text(hjust = 0.5)) + scale_fill_grey()
print(box_water_temp)
wilcox.test(V1~V2, data = water_temp_df)
water_temp_df$V2 = as.factor(water_temp_df$V2) # Changing V2 to a factor so its counter as a categorical var (instead of integer)
box_water_temp = ggplot(data = water_temp_df, aes(x= V2, y= V1, group = V2), auto.key = T) +
geom_boxplot() + labs(x = "Group", y = "Water Temperature (C)") + labs(fill="Group") +
theme(plot.title = element_text(hjust = 0.5)) + scale_fill_grey()
print(box_water_temp)
water_temp_df$V2 = as.factor(water_temp_df$V2) # Changing V2 to a factor so its counter as a categorical var (instead of integer)
box_water_temp = ggplot(data = water_temp_df, aes(x= V2, y= V1, group = V2, fill = V2), auto.key = T) +
geom_boxplot() + labs(x = "Group", y = "Water Temperature (C)") + labs(fill="Group") +
theme(plot.title = element_text(hjust = 0.5)) + scale_fill_grey()
print(box_water_temp)
water_temp_df$V2 = as.factor(water_temp_df$V2) # Changing V2 to a factor so its counter as a categorical var (instead of integer)
box_water_temp = ggplot(data = water_temp_df, aes(x= V2, y= V1, group = V2, fill = V2), auto.key = T) +
geom_boxplot() + labs(x = "Group", y = "Water Temperature (C)") + labs(fill="Group") +
theme(plot.title = element_text(hjust = 0.5)) + theme_classic() + scale_fill_grey()
print(box_water_temp)
water_temp_df$V2 = as.factor(water_temp_df$V2) # Changing V2 to a factor so its counter as a categorical var (instead of integer)
water_temp_df$V2 = as.factor(water_temp_df$V2)# Changing V2 to a factor so its counter as a categorical var (instead of integer)
box_water_temp = ggplot(data = water_temp_df, aes(x= V2, y= V1, group = V2, fill = V2), auto.key = T) +
geom_boxplot() + labs(x = "Group", y = "Water Temperature (C)") + labs(fill="Group") +
theme(plot.title = element_text(hjust = 0.5)) + scale_fill_grey()
print(box_water_temp)
water_temp_df$V2 = as.factor(water_temp_df$V2)# Changing V2 to a factor so its counter as a categorical var (instead of integer)
box_water_temp = ggplot(data = water_temp_df, aes(x= V2, y= V1, group = V2, fill = V2), auto.key = T) +
geom_boxplot() + labs(x = "Group", y = "Water Temperature (C)") + labs(fill="Group") +
theme(plot.title = element_text(hjust = 0.5)) + theme_classic() + scale_fill_grey()
print(box_water_temp)
# Let's first visually compare the two groups by putting the monthly avg time series' on the same plot
plot(matrixG1_ts_temp, col = "black", ylim = c(20,31),
xlab = "Time", ylab = "Avg. Water Temperature (C)") + theme_classic()
lines(matrixG2_ts_temp, col = "gray")
lines(abline(h = 26, col = "black", lty = 4))
lines(abline(h = 28, col = "black", lty = 4))
legend("bottomright", inset=c(.03, .03), c("Group 1","Group 2"), lty = 1, col = c("black","gray"), cex = 0.85, title="Cohort")
# Let's first visually compare the two groups by putting the monthly avg time series' on the same plot
plot(matrixG1_ts_temp, col = "black", ylim = c(20,31),
xlab = "Time", ylab = "Avg. Water Temperature (C)") + #theme_classic()
lines(matrixG2_ts_temp, col = "gray")
# Let's first visually compare the two groups by putting the monthly avg time series' on the same plot
plot(matrixG1_ts_temp, col = "black", ylim = c(20,31),
xlab = "Time", ylab = "Avg. Water Temperature (C)") + #theme_classic()
lines(matrixG2_ts_temp, col = "gray")
# Let's first visually compare the two groups by putting the monthly avg time series' on the same plot
plot(matrixG1_ts_temp, col = "black", ylim = c(20,31),
xlab = "Time", ylab = "Avg. Water Temperature (C)") + #theme_classic()
lines(matrixG2_ts_temp, col = "gray")
lines(abline(h = 26, col = "black", lty = 4))
lines(abline(h = 28, col = "black", lty = 4))
legend("bottomright", inset=c(.03, .03), c("Group 1","Group 2"), lty = 1, col = c("black","gray"), cex = 0.85, title="Cohort")
water_temp = matrix(nrow = 108, ncol = 2) # matrix for box plot
box_water_temp = ggplot(data = water_temp_df, aes(x= V2, y= V1, group = V2, fill = V2), auto.key = T) +
geom_boxplot() + labs(x = "Group", y = "Water Temperature (C)") + labs(fill="Group") +
theme(plot.title = element_text(hjust = 0.5)) + theme_classic() + scale_fill_grey()
print(box_water_temp)
water_temp_df$V2 = as.factor(water_temp_df$V2)# Changing V2 to a factor so its counter as a categorical var (instead of integer)
box_water_temp = ggplot(data = water_temp_df, aes(x= V2, y= V1, group = V2, fill = V2), auto.key = T) +
geom_boxplot() + labs(x = "Group", y = "Water Temperature (C)") + labs(fill="Group") +
theme(plot.title = element_text(hjust = 0.5)) + theme_classic() + scale_fill_manual(values = c(gray(0.25),gray(0.75)))
print(box_water_temp)
water_temp_df$V2 = as.factor(water_temp_df$V2)# Changing V2 to a factor so its counter as a categorical var (instead of integer)
box_water_temp = ggplot(data = water_temp_df, aes(x= V2, y= V1, group = V2, fill = V2), auto.key = T) +
geom_boxplot() + labs(x = "Group", y = "Water Temperature (C)") + labs(fill="Group") +
theme(plot.title = element_text(hjust = 0.5)) + theme_classic() + scale_fill_manual(values = c(gray(0.50),gray(0.75)))
print(box_water_temp)
box_water_temp = ggplot(data = water_temp_df, aes(x= V2, y= V1, group = V2, fill = V2), auto.key = T) +
geom_boxplot() + labs(x = "Group", y = "Water Temperature (C)") + labs(fill="Group") +
theme(plot.title = element_text(hjust = 0.5)) + theme_classic() + scale_fill_manual(values = c(gray(0.45),gray(0.75)))
print(box_water_temp)
box_water_temp = ggplot(data = water_temp_df, aes(x= V2, y= V1, group = V2, fill = V2), auto.key = T) +
geom_boxplot() + labs(x = "Group", y = "Water Temperature (C)") + labs(fill="Group") +
theme(plot.title = element_text(hjust = 0.5)) + theme_classic() + scale_fill_manual(values = c(gray(0.45),gray(0.85)))
print(box_water_temp)
water_temp_df$V2 = as.factor(water_temp_df$V2)# Changing V2 to a factor so its counter as a categorical var (instead of integer)
box_water_temp = ggplot(data = water_temp_df, aes(x= V2, y= V1, group = V2, fill = V2), auto.key = T) +
geom_boxplot() + labs(x = "Group", y = "Water Temperature (C)") + labs(fill="Group") +
theme(plot.title = element_text(hjust = 0.5)) + theme_classic() + scale_fill_manual(values = c(gray(0.45),gray(0.85)))
print(box_water_temp)
# Let's first visually compare the two groups by putting the monthly avg time series' on the same plot
plot(matrixG1_ts_temp, col = "black", ylim = c(20,31),
xlab = "Time", ylab = "Avg. Water Temperature (C)")
lines(matrixG2_ts_temp, col = "gray")
lines(abline(h = 26, col = "black", lty = 4))
lines(abline(h = 28, col = "black", lty = 4))
legend("bottomright", inset=c(.03, .03), c("Group 1","Group 2"), lty = 1, col = c("black","gray"), cex = 0.85, title="Cohort")
wilcox.test(V1~V2, data = water_temp_df)
water_temp_df %>% wilcox_effsize(V1~V2) #calculates effect size of the wilcox test
# Now, we'll do the same thing for spawn rates;
# HO : There is no statistically significant difference in median spawn frequency between groups 1 and 2
# HA : here is a statistically significant difference in median spawn frequency between groups 1 and 2
matrixG1_ts_spawn = ts(matrix_dataG1[,4], start = c(2018, as.numeric(format(inds2[1], "%j"))), frequency = 12) # time series of avg monthly water temperature
plot(matrixG1_ts_spawn, xlab = "Time", ylab = "Average Water Temperature (C)", main = "Group 1 Monthly Spawning Frequency Over Time")
# Looks pretty choppy after 2018
matrixG2_ts_spawn = ts(matrix_dataG2[,4], start = c(2018, as.numeric(format(inds2[1], "%j"))), frequency = 12) # time series of avg monthly water temperature
plot(matrixG2_ts_spawn, xlab = "Time", ylab = "Average Water Temperature (C)", main = "Group 2 Avg. Monthly Spawning Frequency Over Time")
plot(matrixG1_ts_spawn, col = 2, ylim = c(0,21),
xlab = "Time (Monthly)", ylab = "Spawn Frequency")
lines(matrixG2_ts_spawn, col = 3)
legend("topright", title = "Cohort", c("Group 1", "Group 2"), lty = 1, col = 2:3, cex = .85, box.lty = 0) # NEED TO FIX LEGEND PLACEMENT
spawn = matrix(nrow = 108, ncol = 2) # matrix we will use for the analysis
plot(matrixG1_ts_spawn, col = 2, ylim = c(0,21),
xlab = "Time (Monthly)", ylab = "Spawn Frequency")
lines(matrixG2_ts_spawn, col = 3)
plot(matrixG1_ts_spawn, col = "black", ylim = c(0,21),
xlab = "Time (Monthly)", ylab = "Spawn Frequency")
lines(matrixG2_ts_spawn, col = "gray")
legend("topright", title = "Group", c("Group 1", "Group 2"), lty = 1, col = 2:3, cex = .85, box.lty = 0) # NEED TO FIX LEGEND PLACEMENT
legend("topright", title = "Cohort", c("Group 1", "Group 2"), lty = 1, col = 2:3, cex = .85, box.lty = 0) # NEED TO FIX LEGEND PLACEMENT
plot(matrixG1_ts_spawn, col = "black", ylim = c(0,21),
xlab = "Time (Monthly)", ylab = "Spawn Frequency")
lines(matrixG2_ts_spawn, col = "gray")
legend("topright", inset=c(.03, .03), title = "Cohort", c("Group 1", "Group 2"), lty = 1, col = 2:3, cex = .85, box.lty = 0) # NEED TO FIX LEGEND PLACEMENT
legend("topright", inset=c(.03, .03), title = "Cohort", c("Group 1", "Group 2"), lty = 1, col = c("black","gray"), cex = .85, box.lty = 0) # NEED TO FIX LEGEND PLACEMENT
legend("topright", inset=c(.03, .03), title = "Cohort", c("Group 1", "Group 2"), lty = 1, col = c("black","gray"), cex = .85) # NEED TO FIX LEGEND PLACEMENT
legend("topright", inset=c(.03, .03), title = "Cohort", c("Group 1", "Group 2"), lty = 1, col = c("black","gray"), cex = .85) # NEED TO FIX LEGEND PLACEMENT
spawn = matrix(nrow = 108, ncol = 2) # matrix we will use for the analysis
spawn[1:54,1] = matrix_dataG1[,4] # copy over year from earlier matrix
spawn[55:108,1] = matrix_dataG2[,4] # copy over year from earlier matrix
spawn[1:54,2] = 1 # copy over month from earlier matrix
spawn[55:108,2] = 2
spawn_df = as.data.frame(spawn)
favstats(V1 ~ V2, data = spawn_df)
MWU_spawns = group_by(spawn_df, V2) %>%
summarise(
count = n(),
mean = mean(V1, na.rm = TRUE),
sd = sd(V1, na.rm = TRUE),
median = median(V1, na.rm = TRUE),
IQR = IQR(V1, na.rm = TRUE)
)
print(MWU_spawns)
spawn_df$V2 = as.factor(spawn_df$V2) # Changing V2 to a factor so its counter as a categorical var (instead of integer)
box_spawn = ggplot(data = spawn_df, aes(x= V2, y= V1, group = V2, fill = V2), auto.key = T) +
geom_boxplot() + labs(x = "Group", y = "Spawn Frequency") + labs(fill="Group") +
theme(plot.title = element_text(hjust = 0.5)) + theme_classic() + scale_fill_manual(values = c(gray(0.45),gray(0.85)))
print(box_spawn)
wilcox.test(V1~V2, data = spawn_df)
spawn_df %>% wilcox_effsize(V1~V2) #calculates effect size of the wilcox test
# First, we need to add our monthly spawn counts to the monthly data frame
water_temp_df$Spawns[1:54] = matrix_dataG1[,4] # adds monthly spawns for group 1
water_temp_df$Spawns[55:108] = matrix_dataG2[,4] # adds monthly spawns for group 2
ggplot(water_temp_df[1:54,], aes(x = V1, y = Spawns)) + geom_point() + xlab("Water Temperature (C)") + ylab("Spawn Frequency") +
ggtitle("Monthly Average Water Temperature vs. Spawning Frequency (Group 1)") + geom_smooth(method = "lm",se = T, color = 'black') +
theme(plot.title = element_text(hjust = 0.5))
cor.test(water_temp_df[1:54,1], water_temp_df[1:54,3], method = c("kendall")) # lm (Group 1 Spawning Frequency as a function of Monthly Avg Water Temperature)
kendall.ci(water_temp_df[1:54,1], water_temp_df[1:54,3], alpha = 0.05, type = "t")
# Now we do the same for Group 2
ggplot(water_temp_df[55:108,], aes(x = V1, y = Spawns)) + geom_point() + xlab("Water Temperature (C)") + ylab("Spawn Frequency") +
ggtitle("Monthly Average Water Temperature vs. Spawning Frequency (Group 2)") + geom_smooth(method = "lm",se = T, color = 'black') +
theme(plot.title = element_text(hjust = 0.5))
cor.test(water_temp_df[55:108,1], water_temp_df[55:108,3], method = c("kendall")) # lm (Group 1 Spawning Frequency as a function of Monthly Avg Water Temperature)
kendall.ci(water_temp_df[55:108,1], water_temp_df[55:108,3], alpha = 0.05, type = "t")
# Now we do the same for Group 2
ggplot(water_temp_df[55:108,], aes(x = V1, y = Spawns)) + geom_point() + xlab("Water Temperature (C)") + ylab("Spawn Frequency") +
ggtitle("Monthly Average Water Temperature vs. Spawning Frequency (Group 2)") + geom_smooth(method = "lm",se = T, color = 'black') +
theme(plot.title = element_text(hjust = 0.5))
cor.test(water_temp_df[55:108,1], water_temp_df[55:108,3], method = c("kendall")) # lm (Group 1 Spawning Frequency as a function of Monthly Avg Water Temperature)
kendall.ci(water_temp_df[55:108,1], water_temp_df[55:108,3], alpha = 0.05, type = "t")
tank_totalsG1 = as.data.frame(matrix(nrow=1608, ncol =2)) # Create matrix w/ 2 columns, 1 is for the tank number and the other is for associated daily water temps
tank_totalsG1 = as.data.frame(matrix(nrow=1608, ncol =2)) # Create matrix w/ 2 columns, 1 is for the tank number and the other is for associated daily water temps
tank_totalsG1[1:611,1] = "1"
tank_totalsG1[612:1365,1] = "2"
tank_totalsG1[1364:1608,1] = "4"
T1_G1 = na.omit(x1[x1$Tank == '1', 7]) # This pulls all the adjusted daily water temperatures for holding tank 1 in Group 1
tank_totalsG1[1:611,2] = T1_G1[]
T2_G1 = na.omit(x1[x1$Tank == '2', 7]) # This pulls all the adjusted daily water temperatures for holding tank 2 in Group 1
tank_totalsG1[612:1363,2] = T2_G1[]
T4_G1 = na.omit(x1[x1$Tank == '4', 7]) # This pulls all the adjusted daily water temperatures for holding tank 4 in Group 1
tank_totalsG1[1364:1608,2] = T4_G1[]
tank_totalsG1[,1] = as.factor(tank_totalsG1[,1]) # Turns our hold tank number to categorical data, can use this to group data
water_tankG1 = group_by(tank_totalsG1, V1) %>%
summarise(
count = n(),
mean = mean(V2, na.rm = TRUE),
sd = sd(V2, na.rm = TRUE),
median = median(V2, na.rm = TRUE),
IQR = IQR(V2, na.rm = TRUE)
)
print(water_tankG1)
ggplot(tank_totalsG1, mapping = aes(x = V1, y = V2, fill = V1), auto.key = T) + geom_boxplot() +
labs(x = "Holding Tank", y = "Water Temperature(C)") + labs(fill="Tank") + ggtitle("Daily Water Temperature Across Holding Tanks (Group 1)") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(tank_totalsG1, mapping=aes(x=V1, y = V2, color = V1))+ geom_point() # x= water temp, y = spawn freq, color = holding tank GROUP 2
ggplot(tank_totalsG1, mapping = aes(x = V1, y = V2, fill = V1), auto.key = T) + geom_boxplot() +
labs(x = "Holding Tank", y = "Water Temperature(C)") + labs(fill="Tank") + ggtitle("Daily Water Temperature Across Holding Tanks (Group 1)") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(tank_totalsG1, mapping = aes(x = V1, y = V2, fill = V1), auto.key = T) + geom_boxplot() +
labs(x = "Holding Tank", y = "Water Temperature(C)") + labs(fill="Tank")) +
ggplot(tank_totalsG1, mapping = aes(x = V1, y = V2, fill = V1), auto.key = T) + geom_boxplot() +
labs(x = "Holding Tank", y = "Water Temperature(C)") + labs(fill="Tank") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(tank_totalsG1, mapping=aes(x=V1, y = V2, color = V1))+ geom_point() # x= water temp, y = spawn freq, color = holding tank GROUP 2
kruskal.test(V2~V1, data = tank_totalsG1) # Non-parametric equivalent of ANOVA
ggplot(tank_totalsG1, mapping = aes(x = V1, y = V2, fill = V1), auto.key = T) + geom_boxplot() +
labs(x = "Holding Tank", y = "Water Temperature(C)") + labs(fill="Tank") +
theme(plot.title = element_text(hjust = 0.5)) + theme_classic() + scale_fill_manual(values = c(gray(0.45),gray(0.65),gray(0.85)))
#ggplot(tank_totalsG1, mapping=aes(x=V1, y = V2, color = V1))+ geom_point() # x= water temp, y = spawn freq, color = holding tank GROUP 2
kruskal.test(V2~V1, data = tank_totalsG1) # Non-parametric equivalent of ANOVA
# We know theres a significant difference, but we dont know which pairs of groups are different. Will use pairwise wilcocx test to check
pw_testG1 = pairwise.wilcox.test(tank_totalsG1$V2, tank_totalsG1$V1, p.adjust.method = "BH")
print(pw_testG1)
# Since there was significance between water temp and spawns in group 1 but not 2, we'll also do this analysis for group 2.
tank_totalsG2 = as.data.frame(matrix(nrow=1620, ncol =2)) # Create matrix w/ 2 columns, 1 is for the tank number and the other is for associated daily water temps
tank_totalsG2[1:337,1] = "1"
tank_totalsG2[338:1035,1] = "2"
tank_totalsG2[1036:1511,1] = "4"
tank_totalsG2[1512:1620,1] = "6"
T1_G2 = na.omit(x2[x2$Tank == '1', 7]) # This pulls all the adjusted daily water temperatures for holding tank 1 in Group 1
tank_totalsG2[1:337,2] = T1_G2[]
T2_G2 = na.omit(x2[x2$Tank == '2', 7]) # This pulls all the adjusted daily water temperatures for holding tank 1 in Group 1
tank_totalsG2[338:1035,2] = T2_G2[]
T4_G2 = na.omit(x2[x2$Tank == '4', 7]) # This pulls all the adjusted daily water temperatures for holding tank 1 in Group 1
tank_totalsG2[1036:1511,2] = T4_G2[]
T6_G2 = na.omit(x2[x2$Tank == '6', 7]) # This pulls all the adjusted daily water temperatures for holding tank 1 in Group 1
tank_totalsG2[1512:1620,2] = T6_G2[]
tank_totalsG2[,1] = as.factor(tank_totalsG2[,1]) # Turns our hold tank number to categorical data, can use this to group data
water_tankG2 = group_by(tank_totalsG2, V1) %>%
summarise(
count = n(),
mean = mean(V2, na.rm = TRUE),
sd = sd(V2, na.rm = TRUE),
median = median(V2, na.rm = TRUE),
IQR = IQR(V2, na.rm = TRUE)
)
print(water_tankG2)
ggplot(tank_totalsG2, mapping = aes(x = V1, y = V2, fill = V1), auto.key = T) + geom_boxplot() +
labs(x = "Holding Tank", y = "Water Temperature(C)") + labs(fill="Tank") + ggtitle("Daily Water Temperature Across Holding Tanks (Group 2)") +
theme(plot.title = element_text(hjust = 0.5)) + scale_fill_manual(values = c(gray(0.45),gray(0.65),gray(0.85)))
ggplot(tank_totalsG2, mapping=aes(x=V1, y = V2, color = V1))+ geom_point() # x= water temp, y = spawn freq, color = holding tank
ggplot(tank_totalsG2, mapping = aes(x = V1, y = V2, fill = V1), auto.key = T) + geom_boxplot() +
labs(x = "Holding Tank", y = "Water Temperature(C)") + labs(fill="Tank") + ggtitle("Daily Water Temperature Across Holding Tanks (Group 2)") +
theme(plot.title = element_text(hjust = 0.5)) + scale_fill_manual(values = c(gray(0.25),gray(0.45),gray(0.65),gray(0.85)))
ggplot(tank_totalsG2, mapping = aes(x = V1, y = V2, fill = V1), auto.key = T) + geom_boxplot() +
labs(x = "Holding Tank", y = "Water Temperature(C)") + labs(fill="Tank") + ggtitle("Daily Water Temperature Across Holding Tanks (Group 2)") +
theme(plot.title = element_text(hjust = 0.5)) + scale_fill_manual(values = c(gray(0.35),gray(0.45),gray(0.65),gray(0.85)))
ggplot(tank_totalsG2, mapping = aes(x = V1, y = V2, fill = V1), auto.key = T) + geom_boxplot() +
labs(x = "Holding Tank", y = "Water Temperature(C)") + labs(fill="Tank") + ggtitle("Daily Water Temperature Across Holding Tanks (Group 2)") +
theme(plot.title = element_text(hjust = 0.5)) + scale_fill_manual(values = c(gray(0.35),gray(0.45),gray(0.65),gray(0.75)))
ggplot(tank_totalsG2, mapping = aes(x = V1, y = V2, fill = V1), auto.key = T) + geom_boxplot() +
labs(x = "Holding Tank", y = "Water Temperature(C)") + labs(fill="Tank") + ggtitle("Daily Water Temperature Across Holding Tanks (Group 2)") +
theme(plot.title = element_text(hjust = 0.5)) + scale_fill_manual(values = c(gray(0.35),gray(0.45),gray(0.65),gray(0.80)))
ggplot(tank_totalsG2, mapping = aes(x = V1, y = V2, fill = V1), auto.key = T) + geom_boxplot() +
labs(x = "Holding Tank", y = "Water Temperature(C)") + labs(fill="Tank") +
theme(plot.title = element_text(hjust = 0.5)) + scale_fill_manual(values = c(gray(0.35),gray(0.45),gray(0.65),gray(0.80)))
ggplot(tank_totalsG2, mapping = aes(x = V1, y = V2, fill = V1), auto.key = T) + geom_boxplot() +
labs(x = "Holding Tank", y = "Water Temperature(C)") + labs(fill="Tank") +
theme(plot.title = element_text(hjust = 0.5)) + scale_fill_manual(values = c(gray(0.35),gray(0.45),gray(0.65),gray(0.80)))
kruskal.test(V2~V1, data = tank_totalsG2) # Non-parametric equivalent of ANOVA
pw_testG2 = pairwise.wilcox.test(tank_totalsG2$V2, tank_totalsG2$V1, p.adjust.method = "BH")
print(pw_testG2)
